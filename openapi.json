{"openapi":"3.1.0","info":{"title":"Quipubase","description":"**Quipubase** is a cutting-edge, **real-time document database** specifically engineered for the demands of **AI-native applications**.\n        **Key Features for Developers:**\n        * **High Performance:** Built on `RocksDB` for efficient, high-throughput data operations.\n        * **Flexible Schemas:** Define dynamic, self-validating collections using `jsonschema`, adapting effortlessly to evolving data models.\n        * **Integrated Vector Search:** Leverage native support for **vector similarity search** to power intelligent querying, recommendations, and semantic search capabilities at scale.\n        * **Real-time Reactivity:** Implement live, reactive AI systems with a robust `pub/sub` architecture, providing **real-time subscriptions to document-level events**.\n        * **Simplified Development:** Designed to be the ideal backend for modern, intelligent applications, streamlining data management for AI workflows.\n        Quipubase empowers developers to build responsive, intelligent, and scalable AI-driven solutions with ease.\n        ","version":"0.0.1"},"paths":{"/v1/audio/speech":{"post":{"tags":["audio"],"summary":"Generates audio from the input text.","description":"Generates audio from the input text using Google Cloud Text-to-Speech.","operationId":"__v1_audio_speech_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SpeechCreateParams"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/audio/transcriptions":{"post":{"tags":["audio","audio"],"summary":" ","description":"Creates a transcription of the provided audio file using Google Cloud Speech-to-Text.\n\nArgs:\n        file\n                : UploadFile - The audio file to transcribe.\n        model\n                : str - The name of the model to use for transcription. Currently ignored as Google Cloud Speech-to-Text handles model selection internally or via configuration. OpenAI models like 'whisper-1' are for compatibility.\n        response_format\n                : tp.Literal[\"text\",\"json\",\"verbose_json\"] - The format of the transcript output. Only 'json' is fully supported, 'text' will return plain text. Other OpenAI formats like 'srt', 'vtt', 'verbose_json' are not directly supported and will default to 'json' behavior.\n        temperature\n                : Optional[float] - The sampling temperature, between 0 and 1. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. Not directly used by Google Cloud Speech-to-Text.\n        prompt\n                : Optional[str] - An optional text to guide the model's style or continue a previous audio segment. Not directly used by Google Cloud Speech-to-Text.\nReturns:\n        : dict - The transcription result in the requested format.","operationId":"__v1_audio_transcriptions_post","requestBody":{"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/Body___v1_audio_transcriptions_post"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/auth/{provider}":{"get":{"tags":["auth"],"summary":" ","operationId":"__v1_auth__provider__get","parameters":[{"name":"provider","in":"path","required":true,"schema":{"enum":["github","google"],"type":"string","title":"Provider"}},{"name":"code","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Code"}}],"responses":{"307":{"description":"Successful Response"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/collections":{"get":{"tags":["collections"],"summary":" ","description":"List all collections","operationId":"__v1_collections_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CollectionMetadataType"},"type":"array","title":"Response   V1 Collections Get"}}}}}},"post":{"tags":["collections"],"summary":" ","description":"Create a new collection","operationId":"__v1_collections_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/JsonSchemaModel"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CollectionType"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/collections/{collection_id}":{"get":{"tags":["collections"],"summary":" ","description":"Get a specific collection by ID","operationId":"__v1_collections__collection_id__get","parameters":[{"name":"collection_id","in":"path","required":true,"schema":{"type":"string","title":"Collection Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CollectionType"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["collections"],"summary":" ","description":"Delete a collection by ID","operationId":"__v1_collections__collection_id__delete","parameters":[{"name":"collection_id","in":"path","required":true,"schema":{"type":"string","title":"Collection Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeleteCollectionReturnType"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/chat/completions":{"post":{"tags":["chat"],"summary":" ","operationId":"__v1_chat_completions_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ChatCompletion"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/collections/objects/{collection_id}":{"post":{"tags":["collections"],"summary":" ","operationId":"__v1_collections_objects__collection_id__post","parameters":[{"name":"collection_id","in":"path","required":true,"schema":{"type":"string","title":"Collection Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/QuipubaseRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PubResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"get":{"tags":["collections"],"summary":" ","description":"Subscribe to events for a specific collection","operationId":"__v1_collections_objects__collection_id__get","parameters":[{"name":"collection_id","in":"path","required":true,"schema":{"type":"string","title":"Collection Id"}}],"responses":{"200":{"description":"Successful Response"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/images/generations":{"post":{"tags":["images"],"summary":"Image Generation Endpoint","operationId":"image_generation_endpoint_v1_images_generations_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ImageGenerateParams"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/files":{"post":{"tags":["files"],"summary":" ","operationId":"__v1_files_post","parameters":[{"name":"format","in":"query","required":true,"schema":{"enum":["html","text"],"type":"string","title":"Format"}}],"requestBody":{"required":true,"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/Body___v1_files_post"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ChunkFile"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/files/{path}":{"put":{"tags":["files"],"summary":" ","operationId":"__v1_files__path__put","parameters":[{"name":"path","in":"path","required":true,"schema":{"type":"string","title":"Path"}},{"name":"bucket","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Bucket"}}],"requestBody":{"required":true,"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/Body___v1_files__path__put"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetOrCreateFile"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["files"],"summary":" ","operationId":"__v1_files__path__delete","parameters":[{"name":"path","in":"path","required":true,"schema":{"type":"string","title":"Path"}},{"name":"bucket","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Bucket"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","additionalProperties":{"type":"boolean"},"title":"Response   V1 Files  Path  Delete"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/file/{path}":{"get":{"tags":["files"],"summary":" ","operationId":"__v1_file__path__get","parameters":[{"name":"path","in":"path","required":true,"schema":{"type":"string","title":"Path"}},{"name":"bucket","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Bucket"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetOrCreateFile"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/filestree/{path}":{"get":{"tags":["files"],"summary":" ","operationId":"__v1_filestree__path__get","parameters":[{"name":"path","in":"path","required":true,"schema":{"type":"string","title":"Path"}},{"name":"bucket","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Bucket"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetOrCreateFile"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/models":{"get":{"tags":["models"],"summary":" ","operationId":"__v1_models_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Response   V1 Models Get"}}}}}}},"/v1/models/{model}":{"get":{"tags":["models"],"summary":" ","operationId":"__v1_models__model__get","parameters":[{"name":"model","in":"path","required":true,"schema":{"type":"string","title":"Model"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","additionalProperties":true,"title":"Response   V1 Models  Model  Get"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/vector/{namespace}/{id}":{"get":{"tags":["vector"],"summary":" ","operationId":"__v1_vector__namespace___id__get","parameters":[{"name":"namespace","in":"path","required":true,"schema":{"type":"string","title":"Namespace"}},{"name":"id","in":"path","required":true,"schema":{"type":"string","title":"Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/vector/{namespace}":{"post":{"tags":["vector"],"summary":" ","description":"Upsert texts into the vector store.\n\nArgs:\n        namespace: The namespace to store the embeddings in\n        texts: List of texts to embed and store\n        model: The embedding model to use\n\nReturns:\n        UpsertResponse containing the IDs of the upserted embeddings and count","operationId":"__v1_vector__namespace__post","parameters":[{"name":"namespace","in":"path","required":true,"schema":{"type":"string","title":"Namespace"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EmbedText"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpsertResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"put":{"tags":["vector"],"summary":" ","description":"Query the vector store for similar texts.\n\nArgs:\n        namespace: The namespace to query\n        query: The text query to search for similar content\n        top_k: Number of results to return\n        model: The embedding model to use\n\nReturns:\n        QueryResponse containing the matched texts and their similarity scores","operationId":"__v1_vector__namespace__put","parameters":[{"name":"namespace","in":"path","required":true,"schema":{"type":"string","title":"Namespace"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/QueryText"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/QueryResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["vector"],"summary":" ","description":"Delete embeddings from the vector store.\n\nArgs:\n        namespace: The namespace to delete embeddings from\n        ids: List of IDs to delete\n\nReturns:\n        DeleteResponse containing the IDs of the deleted embeddings and count","operationId":"__v1_vector__namespace__delete","parameters":[{"name":"namespace","in":"path","required":true,"schema":{"type":"string","title":"Namespace"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeleteText"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeleteResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/embeddings":{"post":{"tags":["vector"],"summary":" ","operationId":"__v1_embeddings_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EmbedText"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EmbedResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/music/generations":{"post":{"tags":["music"],"summary":" ","operationId":"__v1_music_generations_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/MusicGenerationParams"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"Audio":{"properties":{"id":{"type":"string","title":"Id"}},"type":"object","required":["id"],"title":"Audio"},"Body___v1_audio_transcriptions_post":{"properties":{"file":{"type":"string","format":"binary","title":"File"},"model":{"type":"string","enum":["whisper-large-v3","whisper-large-v3-turbo"],"title":"Model","description":"The name of the model to use for transcription. Currently ignored as Google Cloud Speech-to-Text handles model selection internally or via configuration. OpenAI models like 'whisper-1' are for compatibility."},"size":{"type":"string","title":"Size","description":"The size of the model to use for transcription. Currently ignored as Google Cloud Speech-to-Text handles model selection internally.","default":"auto"},"response_format":{"type":"string","enum":["text","json","verbose_json"],"title":"Response Format","description":"The format of the transcript output. Only 'json' is fully supported, 'text' will return plain text. Other OpenAI formats like 'srt', 'vtt', 'verbose_json' are not directly supported and will default to 'json' behavior.","default":"verbose_json"},"temperature":{"type":"number","title":"Temperature","description":"The sampling temperature, between 0 and 1. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. Not directly used by Google Cloud Speech-to-Text.","default":0.0},"prompt":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Prompt","description":"An optional text to guide the model's style or continue a previous audio segment. Not directly used by Google Cloud Speech-to-Text."}},"type":"object","required":["file","model"],"title":"Body___v1_audio_transcriptions_post"},"Body___v1_files__path__put":{"properties":{"file":{"type":"string","format":"binary","title":"File"}},"type":"object","required":["file"],"title":"Body___v1_files__path__put"},"Body___v1_files_post":{"properties":{"file":{"type":"string","format":"binary","title":"File"}},"type":"object","required":["file"],"title":"Body___v1_files_post"},"ChatCompletion":{"properties":{"model":{"type":"string","title":"Model","description":"The model to use for the chat completion.","default":"gemini-2.0-flash"},"messages":{"items":{"anyOf":[{"$ref":"#/components/schemas/ChatCompletionDeveloperMessageParam"},{"$ref":"#/components/schemas/ChatCompletionSystemMessageParam"},{"$ref":"#/components/schemas/ChatCompletionUserMessageParam"},{"$ref":"#/components/schemas/ChatCompletionAssistantMessageParam"},{"$ref":"#/components/schemas/ChatCompletionToolMessageParam"},{"$ref":"#/components/schemas/ChatCompletionFunctionMessageParam"}]},"type":"array","title":"Messages","description":"The messages to guide the deep research process."},"tools":{"anyOf":[{"items":{"$ref":"#/components/schemas/ChatCompletionToolParam"},"type":"array"},{"type":"null"}],"title":"Tools","description":"The tools that the model can utilize during the research."},"tool_choice":{"anyOf":[{"type":"string","enum":["none","auto","required"]},{"$ref":"#/components/schemas/ChatCompletionNamedToolChoiceParam"}],"title":"Tool Choice","default":"auto"},"stream":{"type":"boolean","title":"Stream","default":true},"max_completion_tokens":{"type":"integer","title":"Max Completion Tokens","description":"The maximum number of tokens to generate in the research run.","default":8192},"max_tokens":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Max Tokens"}},"type":"object","required":["messages"],"title":"ChatCompletion"},"ChatCompletionAssistantMessageParam":{"properties":{"role":{"type":"string","const":"assistant","title":"Role"},"audio":{"anyOf":[{"$ref":"#/components/schemas/Audio"},{"type":"null"}]},"content":{"anyOf":[{"type":"string"},{"items":{"anyOf":[{"$ref":"#/components/schemas/ChatCompletionContentPartTextParam"},{"$ref":"#/components/schemas/ChatCompletionContentPartRefusalParam"}]},"type":"array"},{"type":"null"}],"title":"Content"},"function_call":{"anyOf":[{"$ref":"#/components/schemas/FunctionCall"},{"type":"null"}]},"name":{"type":"string","title":"Name"},"refusal":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Refusal"},"tool_calls":{"items":{"$ref":"#/components/schemas/ChatCompletionMessageToolCallParam"},"type":"array","title":"Tool Calls"}},"type":"object","required":["role"],"title":"ChatCompletionAssistantMessageParam"},"ChatCompletionContentPartImageParam":{"properties":{"image_url":{"$ref":"#/components/schemas/ImageURL"},"type":{"type":"string","const":"image_url","title":"Type"}},"type":"object","required":["image_url","type"],"title":"ChatCompletionContentPartImageParam"},"ChatCompletionContentPartInputAudioParam":{"properties":{"input_audio":{"$ref":"#/components/schemas/InputAudio"},"type":{"type":"string","const":"input_audio","title":"Type"}},"type":"object","required":["input_audio","type"],"title":"ChatCompletionContentPartInputAudioParam"},"ChatCompletionContentPartRefusalParam":{"properties":{"refusal":{"type":"string","title":"Refusal"},"type":{"type":"string","const":"refusal","title":"Type"}},"type":"object","required":["refusal","type"],"title":"ChatCompletionContentPartRefusalParam"},"ChatCompletionContentPartTextParam":{"properties":{"text":{"type":"string","title":"Text"},"type":{"type":"string","const":"text","title":"Type"}},"type":"object","required":["text","type"],"title":"ChatCompletionContentPartTextParam"},"ChatCompletionDeveloperMessageParam":{"properties":{"content":{"anyOf":[{"type":"string"},{"items":{"$ref":"#/components/schemas/ChatCompletionContentPartTextParam"},"type":"array"}],"title":"Content"},"role":{"type":"string","const":"developer","title":"Role"},"name":{"type":"string","title":"Name"}},"type":"object","required":["content","role"],"title":"ChatCompletionDeveloperMessageParam"},"ChatCompletionFunctionMessageParam":{"properties":{"content":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Content"},"name":{"type":"string","title":"Name"},"role":{"type":"string","const":"function","title":"Role"}},"type":"object","required":["content","name","role"],"title":"ChatCompletionFunctionMessageParam"},"ChatCompletionMessageToolCallParam":{"properties":{"id":{"type":"string","title":"Id"},"function":{"$ref":"#/components/schemas/openai__types__chat__chat_completion_message_tool_call_param__Function"},"type":{"type":"string","const":"function","title":"Type"}},"type":"object","required":["id","function","type"],"title":"ChatCompletionMessageToolCallParam"},"ChatCompletionNamedToolChoiceParam":{"properties":{"function":{"$ref":"#/components/schemas/openai__types__chat__chat_completion_named_tool_choice_param__Function"},"type":{"type":"string","const":"function","title":"Type"}},"type":"object","required":["function","type"],"title":"ChatCompletionNamedToolChoiceParam"},"ChatCompletionSystemMessageParam":{"properties":{"content":{"anyOf":[{"type":"string"},{"items":{"$ref":"#/components/schemas/ChatCompletionContentPartTextParam"},"type":"array"}],"title":"Content"},"role":{"type":"string","const":"system","title":"Role"},"name":{"type":"string","title":"Name"}},"type":"object","required":["content","role"],"title":"ChatCompletionSystemMessageParam"},"ChatCompletionToolMessageParam":{"properties":{"content":{"anyOf":[{"type":"string"},{"items":{"$ref":"#/components/schemas/ChatCompletionContentPartTextParam"},"type":"array"}],"title":"Content"},"role":{"type":"string","const":"tool","title":"Role"},"tool_call_id":{"type":"string","title":"Tool Call Id"}},"type":"object","required":["content","role","tool_call_id"],"title":"ChatCompletionToolMessageParam"},"ChatCompletionToolParam":{"properties":{"function":{"$ref":"#/components/schemas/FunctionDefinition"},"type":{"type":"string","const":"function","title":"Type"}},"type":"object","required":["function","type"],"title":"ChatCompletionToolParam"},"ChatCompletionUserMessageParam":{"properties":{"content":{"anyOf":[{"type":"string"},{"items":{"anyOf":[{"$ref":"#/components/schemas/ChatCompletionContentPartTextParam"},{"$ref":"#/components/schemas/ChatCompletionContentPartImageParam"},{"$ref":"#/components/schemas/ChatCompletionContentPartInputAudioParam"},{"$ref":"#/components/schemas/File"}]},"type":"array"}],"title":"Content"},"role":{"type":"string","const":"user","title":"Role"},"name":{"type":"string","title":"Name"}},"type":"object","required":["content","role"],"title":"ChatCompletionUserMessageParam"},"ChunkFile":{"properties":{"chunks":{"items":{"type":"string"},"type":"array","title":"Chunks"},"created":{"type":"number","title":"Created"},"chunkedCount":{"type":"integer","title":"Chunkedcount"}},"type":"object","required":["chunks","created","chunkedCount"],"title":"ChunkFile"},"Collection":{"properties":{"id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Id"}},"additionalProperties":true,"type":"object","title":"Collection","description":"Collection\n\nA base model class for managing a RocksDB-backed collection of records. This class provides methods for creating, retrieving, updating, deleting, and querying records, as well as managing the underlying database schema and configuration.\n\nAttributes:\n    id (Optional[UUID]): The unique identifier for the record, autogenerated by default.\n\nMethods:\n    col() -> Rdict:\n        Get or create a RocksDB instance for this collection.\n\n    col_path() -> str:\n        Get the absolute path to the collection directory.\n\n    col_json_schema() -> JsonSchemaModel:\n        Create and persist a JSON schema for this collection.\n\n    cpu_count() -> int:\n        Get the number of CPU cores available.\n\n    tool_definition() -> dict[str, Any]:\n        Generate tool parameters for `OpenAI` function calling.\n\n    tool_param() -> dict:\n        Generate tool parameters for `Anthropic` function calling.\n\n    options() -> Options:\n        Configure RocksDB options for optimal performance.\n\n    retrieve(cls, *, id: UUID) -> Optional[T]:\n        Retrieve a single record by its ID.\n\n    create(self) -> None:\n        Save or update the current record in the database.\n\n    delete(cls, *, id: UUID) -> bool:\n        Delete a record by its ID.\n\n    find(cls, *, limit: int = 100, offset: int = 0, **kwargs: Any) -> Iterator[T]:\n\n    update(cls, *, id: UUID, **kwargs: Any) -> Optional[T]:\n        Update specific fields of a record by its ID.\n\n    destroy(cls) -> int:\n        Delete the entire collection and its data.\n\n    init(cls) -> None:\n        Initialize the collection by creating necessary directories and files."},"CollectionMetadataType":{"properties":{"id":{"type":"string","title":"Id"},"sha":{"type":"string","title":"Sha"}},"type":"object","required":["id","sha"],"title":"CollectionMetadataType"},"CollectionType":{"properties":{"id":{"type":"string","title":"Id"},"sha":{"type":"string","title":"Sha"},"schema":{"$ref":"#/components/schemas/JsonSchema"}},"type":"object","required":["id","sha","schema"],"title":"CollectionType"},"DeleteCollectionReturnType":{"properties":{"code":{"type":"integer","title":"Code"}},"type":"object","required":["code"],"title":"DeleteCollectionReturnType"},"DeleteResponse":{"properties":{"data":{"items":{"type":"string"},"type":"array","title":"Data"},"count":{"type":"integer","title":"Count"},"ellapsed":{"type":"number","title":"Ellapsed"}},"type":"object","required":["data","count","ellapsed"],"title":"DeleteResponse","description":"Response type for delete operations.\n\nFields:\n    embeddings (list[str]): List of deleted item IDs\n    count (int): Number of items deleted\n    ellapsed (float): Seconds taken to perform the action"},"DeleteText":{"properties":{"ids":{"items":{"type":"string"},"type":"array","title":"Ids"}},"type":"object","required":["ids"],"title":"DeleteText"},"EmbedResponse":{"properties":{"data":{"items":{"$ref":"#/components/schemas/Embedding"},"type":"array","title":"Data"},"count":{"type":"integer","title":"Count"},"ellapsed":{"type":"number","title":"Ellapsed"}},"type":"object","required":["data","count","ellapsed"],"title":"EmbedResponse"},"EmbedText":{"properties":{"input":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"string"}],"title":"Input"},"model":{"type":"string","enum":["poly-sage","deep-pulse","mini-scope"],"title":"Model"}},"additionalProperties":true,"type":"object","required":["input","model"],"title":"EmbedText","description":"Base model for text embeddings","examples":[{"content":["I love Quipubase!","I love myself!","I love my family!","I love my friends!","I love my country!","I love my job!"],"model":"poly-sage"}]},"Embedding":{"properties":{"content":{"anyOf":[{"type":"string"},{"items":{"type":"string"},"type":"array"}],"title":"Content"},"embedding":{"items":{"type":"number"},"type":"array","title":"Embedding"},"id":{"type":"string","title":"Id","readOnly":true}},"type":"object","required":["content","embedding","id"],"title":"Embedding","description":"Represents a text embedding with associated metadata.\n\nAttributes:\n    id (str): Unique identifier for the embedding (auto-generated UUID)\n    content (str | list[str]): Text content or list of strings\n    embedding (NDArray[np.float32]): Vector representation of the content"},"File":{"properties":{"file":{"$ref":"#/components/schemas/FileFile"},"type":{"type":"string","const":"file","title":"Type"}},"type":"object","required":["file","type"],"title":"File"},"FileFile":{"properties":{"file_data":{"type":"string","title":"File Data"},"file_id":{"type":"string","title":"File Id"},"filename":{"type":"string","title":"Filename"}},"type":"object","title":"FileFile"},"FileType":{"properties":{"url":{"type":"string","title":"Url"},"path":{"type":"string","title":"Path"}},"type":"object","required":["url","path"],"title":"FileType"},"FunctionCall":{"properties":{"arguments":{"type":"string","title":"Arguments"},"name":{"type":"string","title":"Name"}},"type":"object","required":["arguments","name"],"title":"FunctionCall"},"FunctionDefinition":{"properties":{"name":{"type":"string","title":"Name"},"description":{"type":"string","title":"Description"},"parameters":{"additionalProperties":true,"type":"object","title":"Parameters"},"strict":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Strict"}},"type":"object","required":["name"],"title":"FunctionDefinition"},"GetOrCreateFile":{"properties":{"data":{"$ref":"#/components/schemas/FileType"},"created":{"type":"number","title":"Created"}},"type":"object","required":["data","created"],"title":"GetOrCreateFile"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"ImageGenerateParams":{"properties":{"prompt":{"type":"string","title":"Prompt"},"background":{"anyOf":[{"type":"string","enum":["transparent","opaque","auto"]},{"type":"null"}],"title":"Background"},"model":{"anyOf":[{"type":"string"},{"type":"string","enum":["dall-e-2","dall-e-3","gpt-image-1"]},{"type":"null"}],"title":"Model"},"moderation":{"anyOf":[{"type":"string","enum":["low","auto"]},{"type":"null"}],"title":"Moderation"},"n":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"N"},"output_compression":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Output Compression"},"output_format":{"anyOf":[{"type":"string","enum":["png","jpeg","webp"]},{"type":"null"}],"title":"Output Format"},"quality":{"anyOf":[{"type":"string","enum":["standard","hd","low","medium","high","auto"]},{"type":"null"}],"title":"Quality"},"response_format":{"anyOf":[{"type":"string","enum":["url","b64_json"]},{"type":"null"}],"title":"Response Format"},"size":{"anyOf":[{"type":"string","enum":["auto","1024x1024","1536x1024","1024x1536","256x256","512x512","1792x1024","1024x1792"]},{"type":"null"}],"title":"Size"},"style":{"anyOf":[{"type":"string","enum":["vivid","natural"]},{"type":"null"}],"title":"Style"},"user":{"type":"string","title":"User"}},"type":"object","required":["prompt"],"title":"ImageGenerateParams"},"ImageURL":{"properties":{"url":{"type":"string","title":"Url"},"detail":{"type":"string","enum":["auto","low","high"],"title":"Detail"}},"type":"object","required":["url"],"title":"ImageURL"},"InputAudio":{"properties":{"data":{"type":"string","title":"Data"},"format":{"type":"string","enum":["wav","mp3"],"title":"Format"}},"type":"object","required":["data","format"],"title":"InputAudio"},"JsonSchema":{"properties":{"title":{"type":"string","title":"Title"},"description":{"type":"string","title":"Description"},"type":{"type":"string","title":"Type"},"properties":{"additionalProperties":true,"type":"object","title":"Properties"},"required":{"items":{"type":"string"},"type":"array","title":"Required"}},"type":"object","required":["type","properties"],"title":"JsonSchema","description":"JSON Schema representation"},"JsonSchemaModel":{"properties":{"title":{"type":"string","title":"Title"},"type":{"type":"string","title":"Type","default":"object"},"properties":{"additionalProperties":true,"type":"object","title":"Properties"},"required":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Required"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description"}},"additionalProperties":true,"type":"object","required":["title","properties"],"title":"JsonSchemaModel","description":"JSON Schema representation","example":{"properties":{"done":{"type":"boolean"},"title":{"type":"string"},"description":{"type":"string"}},"required":["title","done"],"title":"Task","type":"object"}},"LiveMusicGenerationConfig":{"properties":{"temperature":{"anyOf":[{"type":"number"},{"type":"null"}],"title":"Temperature","description":"Controls the variance in audio generation. Higher values produce\n      higher variance. Range is [0.0, 3.0]."},"topK":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Topk","description":"Controls how the model selects tokens for output. Samples the topK\n      tokens with the highest probabilities. Range is [1, 1000]."},"seed":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Seed","description":"Seeds audio generation. If not set, the request uses a randomly\n      generated seed."},"guidance":{"anyOf":[{"type":"number"},{"type":"null"}],"title":"Guidance","description":"Controls how closely the model follows prompts.\n      Higher guidance follows more closely, but will make transitions more\n      abrupt. Range is [0.0, 6.0]."},"bpm":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Bpm","description":"Beats per minute. Range is [60, 200]."},"density":{"anyOf":[{"type":"number"},{"type":"null"}],"title":"Density","description":"Density of sounds. Range is [0.0, 1.0]."},"brightness":{"anyOf":[{"type":"number"},{"type":"null"}],"title":"Brightness","description":"Brightness of the music. Range is [0.0, 1.0]."},"scale":{"anyOf":[{"$ref":"#/components/schemas/Scale"},{"type":"null"}],"description":"Scale of the generated music."},"muteBass":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Mutebass","description":"Whether the audio output should contain bass."},"muteDrums":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Mutedrums","description":"Whether the audio output should contain drums."},"onlyBassAndDrums":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Onlybassanddrums","description":"Whether the audio output should contain only bass and drums."}},"additionalProperties":false,"type":"object","title":"LiveMusicGenerationConfig","description":"Configuration for music generation."},"MusicGenerationParams":{"properties":{"prompts":{"items":{"$ref":"#/components/schemas/WeightedPrompt"},"type":"array","title":"Prompts"},"config":{"$ref":"#/components/schemas/LiveMusicGenerationConfig"}},"type":"object","required":["prompts","config"],"title":"MusicGenerationParams"},"PubResponse":{"properties":{"collection":{"type":"string","title":"Collection"},"data":{"anyOf":[{"$ref":"#/components/schemas/Collection"},{"items":{"$ref":"#/components/schemas/Collection"},"type":"array"}],"title":"Data"},"event":{"type":"string","enum":["create","read","update","delete","query","stop"],"title":"Event"}},"type":"object","required":["collection","data","event"],"title":"PubResponse"},"QueryMatch":{"properties":{"id":{"type":"string","title":"Id"},"score":{"type":"number","title":"Score"},"content":{"type":"string","title":"Content"}},"type":"object","required":["id","score","content"],"title":"QueryMatch","description":"Represents a similarity search result.\n\nAttributes:\n    score (float): Similarity score between 0 and 1\n    content (str): Text content of the matched item\n    embedding (NDArray[np.float32]): Vector representation of the matched item"},"QueryResponse":{"properties":{"data":{"items":{"$ref":"#/components/schemas/QueryMatch"},"type":"array","title":"Data"},"count":{"type":"integer","title":"Count"},"ellapsed":{"type":"number","title":"Ellapsed"}},"type":"object","required":["data","count","ellapsed"],"title":"QueryResponse","description":"Response type for similarity search queries.\n\nFields:\n    matches (list[QueryMatch]): List of matching items\n    count (int): Total number of items considered"},"QueryText":{"properties":{"input":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"string"}],"title":"Input"},"model":{"type":"string","enum":["poly-sage","deep-pulse","mini-scope"],"title":"Model"},"top_k":{"type":"integer","title":"Top K"}},"additionalProperties":true,"type":"object","required":["input","model","top_k"],"title":"QueryText","description":"Model for querying text embeddings","examples":[{"content":["I love you!"],"model":"poly-sage","namespace":"quipubase","top_k":5}]},"QuipubaseRequest":{"properties":{"event":{"type":"string","enum":["create","read","update","delete","query","stop"],"title":"Event","default":"query"},"id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Id"},"data":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"title":"Data","description":"The `data` property of the request body is an object that is of the type documented on the `collection_id`"}},"type":"object","title":"QuipubaseRequest","description":"Quipubase Request\nA model representing a request to the Quipubase API. This model includes fields for the action type, record ID, and any additional data required for the request.\nAttributes:\n    event (QuipuActions): The action to be performed (create, read, update, delete, query).\n    id (Optional[str]): The unique identifier for the record. If None, a new record will be created.\n    data (Optional[Dict[str, Any]]): Additional data required for the request. This can include fields to update or query parameters.","example":{"data":{"description":"This is an example record for testing purposes.","done":false,"title":"Example Record"},"event":"create"}},"Scale":{"type":"string","enum":["SCALE_UNSPECIFIED","C_MAJOR_A_MINOR","D_FLAT_MAJOR_B_FLAT_MINOR","D_MAJOR_B_MINOR","E_FLAT_MAJOR_C_MINOR","E_MAJOR_D_FLAT_MINOR","F_MAJOR_D_MINOR","G_FLAT_MAJOR_E_FLAT_MINOR","G_MAJOR_E_MINOR","A_FLAT_MAJOR_F_MINOR","A_MAJOR_G_FLAT_MINOR","B_FLAT_MAJOR_G_MINOR","B_MAJOR_A_FLAT_MINOR"],"title":"Scale","description":"Scale of the generated music."},"SemanticContent":{"properties":{"id":{"type":"string","title":"Id"},"content":{"anyOf":[{"type":"string"},{"items":{"type":"string"},"type":"array"}],"title":"Content"}},"type":"object","required":["id","content"],"title":"SemanticContent","description":"Typed dictionary for storing semantic content information.\n\nFields:\n    id (str): Unique identifier\n    content (str): Text content"},"SpeechCreateParams":{"properties":{"input":{"type":"string","title":"Input"},"model":{"anyOf":[{"type":"string"},{"type":"string","enum":["tts-1","tts-1-hd","gpt-4o-mini-tts"]}],"title":"Model"},"voice":{"anyOf":[{"type":"string"},{"type":"string","enum":["alloy","ash","ballad","coral","echo","fable","onyx","nova","sage","shimmer","verse"]}],"title":"Voice"},"instructions":{"type":"string","title":"Instructions"},"response_format":{"type":"string","enum":["mp3","opus","aac","flac","wav","pcm"],"title":"Response Format"},"speed":{"type":"number","title":"Speed"}},"type":"object","required":["input","model","voice"],"title":"SpeechCreateParams"},"UpsertResponse":{"properties":{"data":{"items":{"$ref":"#/components/schemas/SemanticContent"},"type":"array","title":"Data"},"count":{"type":"integer","title":"Count"},"ellapsed":{"type":"number","title":"Ellapsed"}},"type":"object","required":["data","count","ellapsed"],"title":"UpsertResponse","description":"Response type for upsert operations.\n\nFields:\n    contents (list[SemanticContent]): List of inserted/updated items\n    count (int): Number of items processed"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"},"WeightedPrompt":{"properties":{"text":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Text","description":"Text prompt."},"weight":{"anyOf":[{"type":"number"},{"type":"null"}],"title":"Weight","description":"Weight of the prompt. The weight is used to control the relative\n      importance of the prompt. Higher weights are more important than lower\n      weights.\n\n      Weight must not be 0. Weights of all weighted_prompts in this\n      LiveMusicClientContent message will be normalized."}},"additionalProperties":false,"type":"object","title":"WeightedPrompt","description":"Maps a prompt to a relative weight to steer music generation."},"openai__types__chat__chat_completion_message_tool_call_param__Function":{"properties":{"arguments":{"type":"string","title":"Arguments"},"name":{"type":"string","title":"Name"}},"type":"object","required":["arguments","name"],"title":"Function"},"openai__types__chat__chat_completion_named_tool_choice_param__Function":{"properties":{"name":{"type":"string","title":"Name"}},"type":"object","required":["name"],"title":"Function"}}}}